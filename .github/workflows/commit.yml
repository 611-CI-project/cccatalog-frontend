on: [push]

jobs:
  lint:
    name: Check source code linting
    runs-on: ubuntu-latest
    steps:
      # Setup Node in the virtual machine
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      # Checkout code from source repository
      - name: Checkout repository code
        uses: actions/checkout@v1
      # Use or set cache for npm modules
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          # Path to npm files, default ~/.npm` on Linux/macOS
          path: ~/.npm
          # Create a cache key with current OS and a SHA-256 hash of the package-lock.json file
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # Sequentially search for any existing caches that matches the list of restore-keys
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      # Install dependencies and run linting
      - name: Install npm dependencies
        run: npm install
      - name: Run source code linting
        run: npm run lint
  unit:
    name: Run unit testing
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Install npm dependencies
        run: npm install
      - name: Run unit testing 
        run: CI=true npm test  >> ./coverage/code_coverage
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: coverage
      # TODO: - name: Upload test report artifact
  coverage:
    name: Check code coverage of unit test
    runs-on: ubuntu-latest
    steps:
      - run: echo 'Code coverage check is not yet implemented'
  build:
    name: Build source code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'
      - name: Install npm dependencies
        run: npm install
      - name: Build application for production
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist

# CI=true npm test | awk '/All/ { n = 50; if($4 < n && $6 < n && $8 < n && $10 < n) exit 1; else {print "OK"}}'