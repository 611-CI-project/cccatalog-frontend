
#   Feature pipeline
#   611-CI-project/cccatalog-frontend

name: feature/<branch>
on:
  push:
    branches:
      - 'feature/*'

jobs:
  lint:
    name: Check source code linting
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Checkout repository code
        uses: actions/checkout@v1
      - name: Cache or retrieve node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: cache-${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-${{ runner.os }}-build-${{ env.cache-name }}-
            cache-${{ runner.os }}-build-
            cache-${{ runner.os }}-
      - name: Install npm dependencies
        run: npm ci
      - name: Run source code linting
        run: npm run lint

  unit:
    name: Run unit testing
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Cache or retrieve node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: cache-${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-${{ runner.os }}-build-${{ env.cache-name }}-
            cache-${{ runner.os }}-build-
            cache-${{ runner.os }}-
      - name: Install npm dependencies
        run: npm ci
      - name: Run unit testing 
        run: CI=true npm test  >> ./coverage/code_coverage
      - name: Upload test report
        uses: actions/upload-artifact@v1
        with:
          name: coverage
          path: coverage

  coverage:
    needs: [unit]
    name: Check code coverage of unit test
    runs-on: ubuntu-latest
    steps:
      - name: Get test report
        uses: actions/download-artifact@v1
        with:
          name: coverage
      - name: Check coverage values
        run: awk '/All/ { n = 50; if($4 < n && $6 < n && $8 < n && $10 < n) exit 1; else {print "OK"}}' coverage/code_coverage
  
  build:
    name: Test to verify that the application can build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v1
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.0'
      - name: Cache or retrieve node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: cache-${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            cache-${{ runner.os }}-build-${{ env.cache-name }}-
            cache-${{ runner.os }}-build-
            cache-${{ runner.os }}-
      - name: Install npm dependencies
        run: npm ci
      - name: Build application
        run: npm run build
